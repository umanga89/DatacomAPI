<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="18" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Motional API Test Suite" duration-ms="4701" started-at="2021-03-20T19:00:59 SGT" finished-at="2021-03-20T19:01:04 SGT">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Taxi Booking Functional Testing" duration-ms="4701" started-at="2021-03-20T19:00:59 SGT" finished-at="2021-03-20T19:01:04 SGT">
      <class name="testRunner.TestNGTestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="setUpClass" is-config="true" duration-ms="490" started-at="2021-03-20T19:01:00 SGT" finished-at="2021-03-20T19:01:00 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="2310" started-at="2021-03-20T19:01:00 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to add pupil with only required parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="185" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to add pupil with all supported parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="66" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if basic authentication header is not provided"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA["message" field does not exist in response body

Actual Response body is {"status":401,"massage":"Authorization header required"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: "message" field does not exist in response body

Actual Response body is {"status":401,"massage":"Authorization header required"}

at steps.AddPupilAPISteps.i_should_see_response_body_as_following_details(AddPupilAPISteps.java:156)
at âœ½.I should see following values in response body(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/AddPupil.feature:42)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="15" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to add pupil with first name having min length of ---"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="0" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to add pupil with first name having max length of ---"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="0" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if first name is not given"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="0" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if last name is not given"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="15" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if grade Id is not given"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="15" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if password is not valid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="0" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to add pupil if username is not valid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Add Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="111" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to delete a pupil with valid pupilId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete Pupils request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Expected response body to be verified as JSON, HTML or XML but no content-type was defined in the response.
Try registering a default parser using:
   RestAssured.defaultParser(<parser type>);
Content was:

]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Expected response body to be verified as JSON, HTML or XML but no content-type was defined in the response.
Try registering a default parser using:
   RestAssured.defaultParser(<parser type>);
Content was:


at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.assertion.StreamVerifier.newAssertion(StreamVerifier.groovy:43)
at io.restassured.assertion.StreamVerifier$newAssertion.call(Unknown Source)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:85)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.Closure.call(Closure.java:412)
at groovy.lang.Closure.call(Closure.java:428)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3562)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3547)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3647)
at org.codehaus.groovy.runtime.dgm$101.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:247)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.GeneratedMethodAccessor119.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at utilities.APIValidationUtil.validateBodyHasParameter(APIValidationUtil.java:27)
at steps.CommonSteps.i_should_see_field_in_response(CommonSteps.java:89)
at âœ½.I should see "pupil deleted" description in response(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/DeletePupil.feature:15)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="67" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to delete a pupil with non-existent pupilId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete Pupils request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <204>.


Actual Response body is 
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <204>.


Actual Response body is 

at steps.CommonSteps.i_should_see_response_with_status_code_as(CommonSteps.java:34)
at âœ½.I should see response with status code as 404(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/DeletePupil.feature:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="89" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to delete a pupil with non-existent pupilId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete Pupils request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA["message" field does not exist in response body

Actual Response body is {"status":405,"massage":"DELETE method not allowed"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: "message" field does not exist in response body

Actual Response body is {"status":405,"massage":"DELETE method not allowed"}

at steps.AddPupilAPISteps.i_should_see_response_body_as_following_details(AddPupilAPISteps.java:156)
at âœ½.I should see following values in response body(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/DeletePupil.feature:27)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="81" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to delete a pupil if basic authentication header is not provided"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete Pupils request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA["message" field does not exist in response body

Actual Response body is {"status":401,"massage":"Authorization header required"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: "message" field does not exist in response body

Actual Response body is {"status":401,"massage":"Authorization header required"}

at steps.AddPupilAPISteps.i_should_see_response_body_as_following_details(AddPupilAPISteps.java:156)
at âœ½.I should see following values in response body(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/DeletePupil.feature:36)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="123" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to get a pupil with valid pupilId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="60" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:03 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should not be able to get a pupil with non-existent pupilId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <504>.


Actual Response body is {"status":504,"massage":"Pupil with ID: \"12321\" not found"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <504>.


Actual Response body is {"status":504,"massage":"Pupil with ID: \"12321\" not found"}

at steps.CommonSteps.i_should_see_response_with_status_code_as(CommonSteps.java:34)
at âœ½.I should see response with status code as 404(file:///C:/Users/laksh/IdeaProjects/SnappetAPITest/src/test/java/features/GetPupil.feature:25)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="100" started-at="2021-03-20T19:01:03 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:04 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to get all pupils if empty pupilId is sent"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Pupil request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="runScenario" duration-ms="37" started-at="2021-03-20T19:01:04 SGT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-03-20T19:01:04 SGT">
          <params>
            <param index="0">
              <value>
                <![CDATA["User should be able to get all pupils created"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Pupils request functional tests]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:testRunner.TestNGTestRunner@7c29daf3]" name="tearDownClass" is-config="true" duration-ms="543" started-at="2021-03-20T19:01:04 SGT" finished-at="2021-03-20T19:01:04 SGT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunner.TestNGTestRunner -->
    </test> <!-- Taxi Booking Functional Testing -->
  </suite> <!-- Motional API Test Suite -->
</testng-results>
